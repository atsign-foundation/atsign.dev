<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Build end-to-end encrypted apps quickly on the @platform â€“ The @sign foundation overview</title><link>https://devstaging.atsign.wtf/docs/overview/</link><description>Recent content in The @sign foundation overview on Build end-to-end encrypted apps quickly on the @platform</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 02 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://devstaging.atsign.wtf/docs/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Specification</title><link>https://devstaging.atsign.wtf/docs/overview/at_protocol_spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devstaging.atsign.wtf/docs/overview/at_protocol_spec/</guid><description>
&lt;h1 id="the-protocol-specification">The @protocol Specification&lt;/h1>
&lt;br>
&lt;table>
&lt;tr>
&lt;td>
&lt;strong>Subject&lt;/strong>
&lt;/td>
&lt;td>@protocol specification
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Author(s)&lt;/strong>
&lt;/td>
&lt;td>Colin Constable, Kevin Nickels, Jagannadh Vanghuri
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Revision&lt;/strong>
&lt;/td>
&lt;td>v0.1.0 (draft)
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Date&lt;/strong>
&lt;/td>
&lt;td>July 5, 2021
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;br>
&lt;h2 id="root-server">Root Server&lt;/h2>
&lt;p>A Root Server should provide a lookup of where a Secondary Server for an @sign is running. This is similar to a DNS server.&lt;/p>
&lt;p>When asking a Root Server for the lookup of a particular @sign the Root Server should respond with a null if the name does not exist and if the name exists the DNS name or address of the @server and the IP port number for that @sign should be returned.&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&lt;/code>&lt;/p>
&lt;p>The Root Server only has one verb - &lt;code>@exit&lt;/code> and all other inputs are considered to be lookup requests.&lt;/p>
&lt;h2 id="secondary-server">Secondary Server&lt;/h2>
&lt;p>A Secondary Server is where an @sign user&amp;rsquo;s personal data should be stored. One interacts with a secondary using the verbs exposed by the protocol.&lt;/p>
&lt;p>A Secondary Server should have 4 major sub components:&lt;/p>
&lt;ol>
&lt;li>Key Store&lt;/li>
&lt;li>Commit Log&lt;/li>
&lt;li>Access Log&lt;/li>
&lt;li>Notification Log&lt;/li>
&lt;/ol>
&lt;p>Verbs described in the document should be used to create, update, delete and retrieve information from the above sub components.&lt;/p>
&lt;h3 id="1-key-store">1. Key Store&lt;/h3>
&lt;p>Key store is a place where user data in a Secondary Server should be saved as key and value pairs. Apart from the value, an @sign user should be able to add certain metadata for a key.&lt;/p>
&lt;h4 id="key">&lt;strong>Key&lt;/strong>&lt;/h4>
&lt;p>A key in the @protocol can be formed by using any alphanumeric and special characters (UTF-8) excluding &amp;ldquo;@&amp;rdquo;, &amp;ldquo;:&amp;rdquo; and a white space (&amp;quot; &amp;ldquo;). A key in a secondary can be any of the following 5 types:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Public Key&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A public key is a key which can be looked up by any @sign user.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A public key should be part of the &lt;em>&lt;span style="text-decoration:underline;">scan&lt;/span>&lt;/em> verb result.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Format of the public key should be &lt;strong>public:&lt;identifier>:&amp;lt;@sign&amp;gt;&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>public:location@alice&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>The owner of the secondary should be allowed to update or delete the value of a public key.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Private Key&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A private key is a key which cannot be looked up any @sign user other than the one created it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A private key should not be returned in a &lt;em>&lt;span style="text-decoration:underline;">scan&lt;/span>&lt;/em> verb result.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Format of the private key should be &lt;strong>privatekey:&lt;identifier>:&amp;lt;@sign&amp;gt;&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>privatekey:pk1@alice&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>The owner of the secondary should be allowed to update or delete the value of a private key.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>User key&lt;/p>
&lt;ul>
&lt;li>A user key can only be looked up by an @sign user with whom the data has been shared.&lt;/li>
&lt;li>A user key should be part of the &lt;em>&lt;span style="text-decoration:underline;">scan&lt;/span>&lt;/em> verb result only for the user who created it and the specific user it has been shared with.&lt;/li>
&lt;li>Format of the key shared with someone else should be &lt;strong>&amp;lt;Shared with @sign&amp;gt;:&lt;identifier>:&amp;lt;Created by @sign&amp;gt;&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>@bob:phone@alice&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Note: Above Key should be part of scan verb result for only @alice and @bob&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The owner of the secondary should be allowed to update or delete the value of a user key.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Internal Key&lt;/p>
&lt;ul>
&lt;li>Internal keys start with an underscore(_) and are not displayed in scan results. Internal keys can be looked up only by the owner of the secondary&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Cached Key&lt;/p>
&lt;ul>
&lt;li>A cached key is a key that was originally created by another @sign user but is now cached on the Secondary Server of another user&amp;rsquo;s @sign as he/she was given permission to cache it.&lt;/li>
&lt;/ul>
&lt;!-- - A user should be able to enable/disable caching of someone else's key by virtue of the "enableKeyCaching" config parameter. &lt;TO DO: Kevin, Colin - We need to discuss. We don't have this yet -->
&lt;ul>
&lt;li>
&lt;p>A cached key should be listed in the &lt;em>&lt;span style="text-decoration:underline;">scan&lt;/span>&lt;/em> verb result for the @sign user who cached it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Format of the key shared with someone else should be &lt;strong>cached:&amp;lt;Shared with @sign&amp;gt;:&lt;identifier>:&amp;lt;Created by @sign&amp;gt;&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>cached:@bob:phone@alice&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>The user who has cached the key should not be allowed to update the cached key.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>An @sign user who has created and shared the key should be allowed to update a cached key, and if the &amp;ldquo;autoNotify&amp;rdquo; config parameters is set to true, the updated value should be notified (please refer to the &lt;code>notify&lt;/code> verb) and the cached key updated with the new value.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>If the user who originally shared the keys set the CCD (Cascade delete) to true, the cached key will be deleted when the original key is deleted.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h4 id="value">&lt;strong>Value&lt;/strong>&lt;/h4>
&lt;p>Text or binary values can be saved in a Secondary Server. The size of the value saved in a secondary is bound by the config parameter &amp;ldquo;maxBufferSize&amp;rdquo;.&lt;/p>
&lt;!-- &lt;TO DO: Kevin, Colin - We need to discuss. Do we need this.> -->
&lt;blockquote>
&lt;p>A user should be made aware of this limitation by using the &lt;code>stats&lt;/code> verb.&lt;/p>
&lt;/blockquote>
&lt;!-- &lt;TODO: Ex: @stats:10 should return the max size permitted by a secondary as a single value in bytes> -->
&lt;blockquote>
&lt;p>If a binary value is being saved on a Secondary Server, the &amp;ldquo;isBinary&amp;rdquo; attribute on the metadata should be set to true by the convention.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>Reference Value&lt;/p>
&lt;p>A Secondary Server should support referencing another key&amp;rsquo;s value.&lt;/p>
&lt;p>A reference value should be in the format &amp;ldquo;atsign://&lt;key>&amp;rdquo;.&lt;/p>
&lt;p>For example, &amp;lsquo;phone@bob(key)&amp;rsquo; is 1234 (value). Now another key called altPhone@bob can refer to phone@bob by referencing it as altPhone@bob = atsign://phone@bob.&lt;/p>
&lt;p>When the user does a lookup on the key that contains a reference, the Secondary Server should return a fully resolved value.&lt;/p>
&lt;!-- &lt;TO DO: Caching referenced keys is tricky. We have not yet implemented this yet.> -->
&lt;/li>
&lt;li>
&lt;p>Metadata&lt;/p>
&lt;p>Metadata of a key should describe the following properties of the value being inserted.&lt;/p>
&lt;table>
&lt;tr>
&lt;td>
&lt;strong>Meta Attribute&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Auto create?&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Description&lt;/strong>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>createdOn
&lt;/td>
&lt;td>Yes
&lt;/td>
&lt;td>Date and time when the key has been created.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>createdBy
&lt;/td>
&lt;td>Yes
&lt;/td>
&lt;td>@sign that has created the key
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>updatedOn
&lt;/td>
&lt;td>Yes
&lt;/td>
&lt;td>Date and time when the key has been last updated.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sharedWith
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>@sign of the user with whom the key has been shared. Can be null if not shared with anyone.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ttl
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>Time to live in milliseconds.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>expiresOn
&lt;/td>
&lt;td>Yes
&lt;/td>
&lt;td>A Date and Time derived from the ttl (now + ttl). A Key should be auto deleted once it expires.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ttb
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>Time to birth in milliseconds.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>availableFrom
&lt;/td>
&lt;td>Yes
&lt;/td>
&lt;td>A Date and Time derived from the ttl (now + ttl). A Key should be only available after availableFrom.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>isCached
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>True if the key can be cached by another @sign user.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ttr
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>Time in milliseconds after which the cached key needs to be refreshed. Ttr of -1 indicates that the key can be cached forever.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refreshAt
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>A Date and Time derived from the ttr. The time at which the key gets refreshed.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ccd
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>Indicates if a cached key needs to be deleted when the @sign user who has originally shared it deletes it.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>isBinary
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>True if the value is a binary value.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>isEncrypted
&lt;/td>
&lt;td>No
&lt;/td>
&lt;td>True if the value is encrypted
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;h3 id="2-commit-log">2. Commit Log&lt;/h3>
&lt;p>A Secondary Server should record any create, update and delete operations in a commit log. The Commit Log should record these operations with a unique commit id so that users of the secondary can lookup operations that happened on or after a given commit id.&lt;/p>
&lt;p>A Secondary Server should provide a way to compact the Commit Log based on time and size.&lt;/p>
&lt;h3 id="3-access-log">3. Access Log&lt;/h3>
&lt;p>A Secondary Server should record the following user actions: user login, user authentication and lookup. The Access Log should record these operations so that users of the secondary can retrieve various statistics such as the most visited @sign or most visited keys.&lt;/p>
&lt;p>A Secondary Server should provide a way to compact the Access Log based on time and size.&lt;/p>
&lt;h3 id="4-notification-log">4. Notification Log&lt;/h3>
&lt;p>A Secondary Server should record any notifications that have been received and sent. Please check the &lt;code>notify&lt;/code> verb specification for details on how a notification should be sent.&lt;/p>
&lt;p>A Secondary Server should provide a way to compact the Notification Log based on time and size.&lt;/p>
&lt;h2 id="standard-keys">Standard Keys&lt;/h2>
&lt;p>A Secondary Server should have the following standard keys:&lt;/p>
&lt;table>
&lt;tr>
&lt;td>
&lt;strong>Key&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Description&lt;/strong>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>public:publickey@&lt;atsign>
&lt;/td>
&lt;td>Public key used by other atsigns for encryption.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>public:signing_publickey@&lt;atsign>
&lt;/td>
&lt;td>Public key used on a pol handler to verify a signed challenge
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;atsign>@signing_privatekey@&lt;atsign>
&lt;/td>
&lt;td>Private key used to sign a challenge on a pol request
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;atsign>:shared_key@&lt;atsign>
&lt;/td>
&lt;td>Symmetric key used to encrypt/decrypt self atsign data
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;h2 id="configuration-parameters">Configuration Parameters&lt;/h2>
&lt;p>A Secondary Server should honor the following configuration parameters.&lt;/p>
&lt;!-- &lt;TO DO: Ideally these parameters should be set using some verb so that the user can control them. config verb can be extended to accomplish the same. Config verb also has the list option, so we can set/reset/list the configuration using the same> -->
&lt;table>
&lt;tr>
&lt;td>
&lt;strong>Key&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Valid Values&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Description&lt;/strong>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>autoNotify&lt;/strong>
&lt;/td>
&lt;td>true/false
&lt;/td>
&lt;td>If set to true, a Secondary Server should automatically notify another @sign user when a key has been shared with him/her. Please refer to the &lt;em>&lt;span style="text-decoration:underline;">notify &lt;/span>&lt;/em>verb spec for details.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>bufferLimit &lt;/strong>
&lt;/td>
&lt;td>Number of bytes
&lt;/td>
&lt;td>Maximum size of a value for a key that can be transferred to a Secondary Server
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>inbound_max_limit&lt;/strong>
&lt;/td>
&lt;td>An Integer
&lt;/td>
&lt;td>Maximum number of inbound connections that a Secondary Server can accept
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>outbound_max_limit&lt;/strong>
&lt;/td>
&lt;td>An Integer
&lt;/td>
&lt;td>Maximum number of outbound connections that a secondary can make to another Secondary Server
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>inbound_idle_time_millis&lt;/strong>
&lt;/td>
&lt;td>Time in milliseconds
&lt;/td>
&lt;td>Maximum time the inbound connection can be active
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>outbound_idle_time_millis&lt;/strong>
&lt;/td>
&lt;td>Time in milliseconds
&lt;/td>
&lt;td>Maximum time the outbound connection can be active.
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;h2 id="block-list">Block List&lt;/h2>
&lt;p>A user of the Secondary Server should be able to decide who is allowed to connect to a Secondary Server. The &lt;code>config&lt;/code> verb should be used to configure this. Once added, a Secondary Server should honor the list at the time of accepting new connections from an @sign user using the &lt;code>from&lt;/code> verb.&lt;/p>
&lt;!-- ## Life Cycle -->
&lt;!-- &lt;TO DO: TBD: What I want to write is, A User of the secondary should be able to control pausing and resuming of a Secondary Server> -->
&lt;h2 id="verbs">Verbs&lt;/h2>
&lt;h3 id="the-from-verb">The &lt;code>from&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>from&lt;/code> verb is used to tell a secondary whom you claim to be.&lt;/p>
&lt;p>Following regex represents the syntax of the &lt;code>from&lt;/code> verb:&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>r'^from:(?&amp;lt;@sign&amp;gt;@?[^@\s]+$)' &lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user who is trying to connect is the owner of the Secondary Server, then the &lt;code>from&lt;/code> verb should respond with the following response.&lt;/p>
&lt;p>&lt;code>key:&amp;lt;sessionId@sign:uuid&amp;gt;&lt;/code>&lt;/p>
&lt;p>If the user who is trying to connect is not the owner of the Secondary Server, then the &lt;code>from&lt;/code> verb should respond with the following response.&lt;/p>
&lt;p>&lt;code>proof:&amp;lt;sessionid&amp;gt;@&amp;lt;@sign&amp;gt;:&amp;lt;UUID&amp;gt;&lt;/code>&lt;/p>
&lt;p>If the user is not allowed to connect to the Secondary Server, then it should respond back with the following error and close the connection to the server.&lt;/p>
&lt;p>&lt;code>error:AT0013-Connection Exception&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>from&lt;/code> verb is used to tell the Secondary Server what @sign you claim to be. With the &lt;code>from&lt;/code> verb, one can connect to one&amp;rsquo;s own Secondary Server or someone else&amp;rsquo;s Secondary Server. In both cases, the Secondary Server responds back with a challenge to prove that you are who you claim to be. This is part of the authentication mechanism of the @protocol.&lt;/p>
&lt;p>This authentication mechanism varies based on whether you are connecting to your own secondary (cram) or someone else&amp;rsquo;s secondary (pol).&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;&lt;/code>
Required: Yes
Description: @sign with which you are connecting to a Secondary Server.&lt;/p>
&lt;h3 id="the-cram-verb">The &lt;code>cram&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>cram&lt;/code> verb is used to boostrap authenticate one&amp;rsquo;s own self as an owner of a Secondary Server. It is
intended to be used once until a set of PKI keys are cut on the owner&amp;rsquo;s mobile device and from then on
we use the &lt;code>pkam&lt;/code> verb.&lt;/p>
&lt;p>The following regex represents the syntax of the &lt;code>cram&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>r'^cram:(?&amp;lt;digest&amp;gt;.+$)'&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user gets the challenge right, the prompt should change to the @sign of the user.&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;@&lt;/code>&lt;/p>
&lt;p>If the user gets the cram authentication wrong, then it should respond back with the following error and close the connection to the server.&lt;/p>
&lt;p>&lt;code>error:AT0401-Client authentication failed&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>cram&lt;/code> verb follows the &lt;code>from&lt;/code> verb. As an owner of the Secondary Server, you should be able to take the challenge thrown by the &lt;code>from&lt;/code> verb and encrypt using the shared key that the server has been bound with. Upon receiving the &lt;code>cram&lt;/code> verb along with the digest, the server decrypts the digest using the shared key and matches it with the challenge. If they are the same, then the secondary lets you connect to the Secondary Server and changes the prompt to your @sign.&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;digest&amp;gt; &lt;/code>
Required: Yes
Description: Encrypted challenge&lt;/p>
&lt;h3 id="the-pol-verb">The &lt;code>pol&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>pol&lt;/code> verb is part of the &lt;code>pkam&lt;/code> process to authenticate oneself while connecting to someone else&amp;rsquo;s Secondary Server. The term
&amp;lsquo;pol&amp;rsquo; means &amp;lsquo;proof of life&amp;rsquo; as it provides a near realtime assurance that the requestor is who it claims to be.&lt;/p>
&lt;p>Following regex represents the syntax of the &lt;code>pol&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>r'^pol$'&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user gets the challenge right the prompt should change to the @sign of the user.&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;@&lt;/code>&lt;/p>
&lt;p>If the user gets the cram authentication wrong then it should respond back with the following error and close the connection to the server.&lt;/p>
&lt;p>&lt;code>error:AT0401-Client authentication failed&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>pol&lt;/code> verb follows the &lt;code>from&lt;/code> verb. &amp;lsquo;pol&amp;rsquo; indicates another secondary that the user who is trying to connect is ready to authenticate himself. For example, if @bob is trying to connect to @alice, @bob would take the key and value from the proof response of the verb and create a public key and value which then can be looked up by @alice. After @alice looks up @bob&amp;rsquo;s secondary @alices secondary should change the prompt to @bob.&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>NA&lt;/p>
&lt;h3 id="the-update-verb">The &lt;code>update&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>update&lt;/code> verb is used to insert key/value pairs into a Key Store. An update can only be run by the owner of a Secondary Server on his/her own Secondary Server.&lt;/p>
&lt;p>Following regex represents the syntax of the &lt;code>update&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>r'^update:(?:ttl:(?&amp;lt;ttl&amp;gt;\d+):)?(?:ttb:(?&amp;lt;ttb&amp;gt;\d+):)?(?:ttr:(?&amp;lt;ttr&amp;gt;(-?)\d+):)?(ccd:(?&amp;lt;ccd&amp;gt;true|false):)?((?:public:)|(@(?&amp;lt;for@sign&amp;gt;[^@:\s]-):))?(?&amp;lt;atKey&amp;gt;[^:@]((?!:{2})[^@])+)(?:@(?&amp;lt;@sign&amp;gt;[^@\s]-))? (?&amp;lt;value&amp;gt;.+$)'&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>The Secondary Server should return the commit id from Commit Log if the update is successful.&lt;/p>
&lt;p>&lt;code>data:&amp;lt;CommitId&amp;gt;&lt;/code>&lt;/p>
&lt;p>If the user provides the invalid update command, then it should respond with the following error and close the connection to the server&lt;/p>
&lt;p>&lt;code>error:AT0003-Invalid Syntax&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>update&lt;/code> verb should be used to perform create/update operations on the Secondary Server. The &lt;code>update&lt;/code> verb requires the owner of the secondary to authenticate himself/herself to the Secondary Server using &lt;code>from&lt;/code> and &lt;code>cram&lt;/code> verbs.&lt;/p>
&lt;p>If a key has been created for another @sign user, the Secondary Server should honor &amp;ldquo;autoNotify&amp;rdquo; configuration parameter.&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;ttl&amp;gt;&lt;/code>
Required: No
Description: Time to live in milliseconds&lt;/p>
&lt;p>&lt;code>&amp;lt;ttb&amp;gt;&lt;/code>
Required: No
Description: Time to birth in milliseconds&lt;/p>
&lt;p>&lt;code>&amp;lt;ttr&amp;gt;&lt;/code>
Required: No
Description: Time to refresh in milliseconds.&lt;/p>
&lt;blockquote>
&lt;p>-1 is a valid value which indicates that the user with whom the key has been shared can keep it forever and the value for this key won&amp;rsquo;t change forever.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>&amp;lt;ccd&amp;gt;&lt;/code>
Required: No
Description: A value of &amp;ldquo;true&amp;rdquo; indicates that the cached key needs to be deleted when the @sign user who has originally shared it deletes it.&lt;/p>
&lt;p>&lt;code>&amp;lt;for@sign&amp;gt;&lt;/code>
Required: Yes (Not required when the key is a public key)
Description: @sign of the user with whom the key has been shared&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;&lt;/code>
Required: Yes
Description: @sign of the owner&lt;/p>
&lt;p>&lt;code>&amp;lt;value&amp;gt;&lt;/code>
Required: Yes
Description: Value for the key&lt;/p>
&lt;h3 id="the-updatemeta-verb">The &lt;code>update:meta&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>update:meta&lt;/code> verb should be used to update the metadata of a key @sign user without having to send or save the value again.&lt;/p>
&lt;p>Following is the regex for the &lt;code>update:meta&lt;/code> verb&lt;/p>
&lt;p>&lt;code>^update:meta:((?:public:)|((?&amp;lt;forAtSign&amp;gt;@?[^@\s]-):))?(?&amp;lt;atKey&amp;gt;((?!:{2})[^@])+)@(?&amp;lt;atSign&amp;gt;[^@:\s]-)(:ttl:(?&amp;lt;ttl&amp;gt;\d+))?(:ttb:(?&amp;lt;ttb&amp;gt;\d+))?(:ttr:(?&amp;lt;ttr&amp;gt;\d+))?(:ccd:(?&amp;lt;ccd&amp;gt;true|false))?(:isBinary:(?&amp;lt;isBinary&amp;gt;true|false))?(:isEncrypted:(?&amp;lt;isEncrypted&amp;gt;true|false))?$&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>The Secondary Server should return the commit id from Commit Log if the update is successful.&lt;/p>
&lt;p>&lt;code>data:&amp;lt;CommitId&amp;gt;&lt;/code>&lt;/p>
&lt;p>If the user provides the invalid update meta command, then it should respond with the following error and close the connection to the server&lt;/p>
&lt;p>&lt;code>error:AT0003-Invalid Syntax&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>update:meta&lt;/code> verb should be used to perform create/update operations on the Secondary Server. The &lt;code>update:meta&lt;/code> verb requires the owner of the secondary to authenticate himself/herself to the Secondary Server using &lt;code>from&lt;/code> and &lt;code>cram&lt;/code> verbs.&lt;/p>
&lt;p>The Secondary Server should allow creation of keys with null values. If a key has been created for another @sign user, the Secondary Server should honor &amp;ldquo;autoNotify&amp;rdquo; configuration parameter.&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;ttl&amp;gt;&lt;/code>
Required: No
Description: Time to live in milliseconds&lt;/p>
&lt;p>&lt;code>&amp;lt;ttb&amp;gt; &lt;/code>
Required: No
Description: Time to birth in milliseconds&lt;/p>
&lt;p>&lt;code>&amp;lt;ttr&amp;gt; &lt;/code>
Required: No
Description: Time to refresh in milliseconds.&lt;/p>
&lt;blockquote>
&lt;p>-1 is a valid value which indicates that the user with whom the key has been shared can keep it forever and the value for this key won&amp;rsquo;t change forever.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>&amp;lt;ccd&amp;gt;&lt;/code>
Required: No
Description: A value of &amp;ldquo;true&amp;rdquo; indicates that the cached key needs to be deleted when the @sign user who has originally shared it deletes it.&lt;/p>
&lt;p>&lt;code>&amp;lt;for@sign&amp;gt;&lt;/code>
Required: Yes (Not required when the key is a public key)
Description: @sign of the user with whom the key has been shared&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;&lt;/code>
Required: Yes
Description: @sign of the owner&lt;/p>
&lt;h3 id="the-lookup-verb">The &lt;code>lookup&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>lookup&lt;/code> verb should be used to lookup the value shared by another @sign user.&lt;/p>
&lt;p>The following is the regex of the &lt;code>lookup&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>lookup:((?&amp;lt;operation&amp;gt;meta|all):)?(?&amp;lt;atKey&amp;gt;(?:[^:]).+)@(?&amp;lt;@sign&amp;gt;[^@\s]+)$&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the operation is not specified the Secondary Server should just respond back with the value saved by the user as is.&lt;/p>
&lt;p>&lt;code>data:&amp;lt;value&amp;gt;&lt;/code>&lt;/p>
&lt;p>If the operation is to lookup the metadata only then the result should be wrapped in a JSON in the following format:&lt;/p>
&lt;p>&lt;code>data:&amp;lt;Metadata in a JSON&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">data:&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdBy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;@bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;updatedBy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;@bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:48.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;updatedAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:48.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;availableAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;expiresAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;refreshAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:58.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;status&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttl&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10000&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ccd&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;isBinary&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;isEncrypted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the operation is to lookup the metadata and the data together then the result should be wrapped in a JSON in the following format:&lt;/p>
&lt;p>&lt;code>data:&amp;lt;Value and Metadata in a JSON&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">data:&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;@alice:country@bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;data&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;USA&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;metaData&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdBy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;@bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;updatedBy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;@bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:48.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;updatedAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:48.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;availableAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;expiresAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;refreshAt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-21 09:46:58.982Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;status&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttl&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ttr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10000&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;ccd&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;isBinary&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;isEncrypted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the other Secondary Server on which the lookup needs to be performed is down then the secondary should return the following error and keep the connection alive.&lt;/p>
&lt;p>&lt;code>error:AT0007-Secondary Server not found.&lt;/code>&lt;/p>
&lt;p>If the lookup command is not valid, then the Secondary Server should return the following error and close the connection:&lt;/p>
&lt;p>&lt;code>error:AT0003-Invalid Syntax&lt;/code>&lt;/p>
&lt;p>For whatever reasons, If the handshake with another secondary fails, then the Secondary Server should return the following error:&lt;/p>
&lt;p>&lt;code>data:AT0008-Handshake failure&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>:&lt;/p>
&lt;p>The &lt;code>lookup&lt;/code> verb should be used to fetch the value of the key shared by another @sign user. If there is a public and user key with the same name then the result should be based on whether the user is trying to lookup is authenticated or not. If the user is authenticated then the user key has to be returned, otherwise the public key has to be returned.&lt;/p>
&lt;h3 id="the-plookup-verb">The &lt;code>plookup&lt;/code> verb:&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>plookup&lt;/code> verb enables to lookup the value of the public key shared by another @sign user.&lt;/p>
&lt;p>Following is the regex of the &lt;code>plookup&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>^plookup:((?&amp;lt;operation&amp;gt;meta|all):)?(?&amp;lt;atKey&amp;gt;[^@\s]+)@(?&amp;lt;@sign&amp;gt;[^@\s]+)$&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>The Secondary Server should return the value or metadata or the value and metadata together based on the option specified.&lt;/p>
&lt;p>The response structure should be exactly the same as the &lt;code>lookup&lt;/code> verb.&lt;/p>
&lt;p>If the other Secondary Server on which the &lt;code>lookup&lt;/code> needs to be performed is not available, then the secondary should return the following error and keep the connection alive.&lt;/p>
&lt;p>&lt;code>error:AT0007-Secondary Server not found.&lt;/code>&lt;/p>
&lt;p>If the &lt;code>lookup&lt;/code> command is not valid, then the Secondary Server should return the following error and close the connection:&lt;/p>
&lt;p>&lt;code>error:AT0003-Invalid Syntax&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>:&lt;/p>
&lt;p>The &lt;code>plookup&lt;/code> verb should be used to fetch the value of the public key shared by another @sign user.&lt;/p>
&lt;h3 id="the-llookup-verb">The &lt;code>llookup&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>llookup&lt;/code> verb should be used to look up one&amp;rsquo;s own secondary and this should return the value as is (i.e. without any resolution).&lt;/p>
&lt;p>The Following is the regex of the &lt;code>llookup&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>^llookup:((?&amp;lt;operation&amp;gt;meta|all):)?(?:cached:)?((?:public:)|(@(?&amp;lt;for@sign&amp;gt;[^@:\s]-):))?(?&amp;lt;atKey&amp;gt;[^:]((?!:{2})[^@])+)@(?&amp;lt;@sign&amp;gt;[^@\s]+)$&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>The Secondary Server should return the value or metadata or the value and metadata together based on the option specified.&lt;/p>
&lt;p>The response structure should be exactly the same as the &lt;code>lookup&lt;/code> verb.&lt;/p>
&lt;p>If the other Secondary Server on which the lookup needs to be performed is down then the secondary should return the following error and keep the connection alive.&lt;/p>
&lt;p>&lt;code>error:AT0007-Secondary Server not found.&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>If the lookup command is not valid, then the Secondary Server should return the following error and close the connection:&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>error:AT0003-Invalid Syntax&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>:&lt;/p>
&lt;p>The &lt;code>llookup&lt;/code> verb should be used to fetch the value of the key in the owners secondary store as is without resolving it. For example if a key contains a reference as a value, the &lt;code>lookup&lt;/code> verb should resolve it to a value whereas llookup should return the value as is.&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>If phone@bob is &amp;ldquo;1234&amp;rdquo; and altphone@bob is &amp;ldquo;atsign://phone@bob&amp;rdquo;,
then &lt;code>lookup&lt;/code> of altphone@bob should return &amp;ldquo;1234&amp;rdquo; whereas &lt;code>llookup&lt;/code> of altphone@bob should return &amp;ldquo;atsign://phone@bob&amp;rdquo;.&lt;/p>
&lt;h3 id="the-pkam-verb">The &lt;code>pkam&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>pkam&lt;/code> verb is used to authenticate one&amp;rsquo;s own self as an owner of a Secondary Server using a PKI style authentication.&lt;/p>
&lt;p>Following regex represents the syntax of the &lt;code>pkam&lt;/code> verb:&lt;/p>
&lt;p>&lt;code>^pkam:(?&amp;lt;signature&amp;gt;.+$)&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user gets the challenge right, the prompt should change to the @sign of the user.&lt;/p>
&lt;p>&lt;code>&amp;lt;@sign&amp;gt;@&lt;/code>&lt;/p>
&lt;p>If the user gets the pkam authentication wrong then it should respond back with the following error and close the connection to the server.&lt;/p>
&lt;p>&lt;code>error:AT0401-Client authentication failed&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>pkam&lt;/code> verb follows the &lt;code>from&lt;/code> verb. As an owner of the Secondary Server, you should be able to take the challenge thrown by the &lt;code>from&lt;/code> verb and encrypt using the private key of the RSA key pair with what the server has been bound with. Upon receiving the &lt;code>cram&lt;/code> verb along with the digest, the server decrypts the digest using the public key and matches it with the challenge. If they are the same then the secondary lets you connect to the Secondary Server and changes the prompt to your @sign.&lt;/p>
&lt;p>&lt;strong>OPTIONS:&lt;/strong>&lt;/p>
&lt;p>&lt;code>&amp;lt;digest&amp;gt; &lt;/code>
Required: Yes
Description: Encrypted challenge&lt;/p>
&lt;h3 id="the-stats-verb">The &lt;code>stats&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>stats&lt;/code> verb should be used to get the statistics of an atsign.&lt;/p>
&lt;p>Following is the regex of the &lt;code>stats&lt;/code> verb&lt;/p>
&lt;p>&lt;code>stats(?&amp;lt;statId&amp;gt;:((?!0)\d+)?(,(\d+))-)?&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user gives stats all the statistics will be returned as JSON. Following statistics are provided:&lt;/p>
&lt;ol>
&lt;li>&lt;code>activeInboundConnections&lt;/code>&lt;/li>
&lt;li>&lt;code>activeOutboundConnections&lt;/code>&lt;/li>
&lt;li>&lt;code>lastCommitId&lt;/code>&lt;/li>
&lt;li>&lt;code>secondaryStorageSize&lt;/code>&lt;/li>
&lt;li>&lt;code>topAtSigns&lt;/code>&lt;/li>
&lt;li>&lt;code>topKeys&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;p>&lt;code>data: [{&amp;quot;id&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;activeInboundConnections&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;2&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;activeOutboundConnections&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;0&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;3&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;lastCommitID&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;4&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;secondaryStorageSize&amp;quot;,&amp;quot;value&amp;quot;:12560}, {&amp;quot;id&amp;quot;:&amp;quot;5&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;topAtSigns&amp;quot;,&amp;quot;value&amp;quot;:{&amp;quot;@bob&amp;quot;:1}}, {&amp;quot;id&amp;quot;:&amp;quot;6&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;topKeys&amp;quot;,&amp;quot;value&amp;quot;:{&amp;quot;publickey@alice&amp;quot;:1}}]&lt;/code>&lt;/p>
&lt;p>Individual statistics can be retrieved using the respective Id.&lt;/p>
&lt;pre>&lt;code>@alice@stats:1
data: [{&amp;quot;id&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;activeInboundConnections&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1&amp;quot;}]
&lt;/code>&lt;/pre>&lt;h3 id="the-sync-verb">The &lt;code>sync&lt;/code> verb&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>sync&lt;/code> verb enables to synchronize the keys between the local Secondary Server and remote Secondary Server.&lt;/p>
&lt;p>Following is the regex:&lt;/p>
&lt;p>&lt;code>sync:(?&amp;lt;from_commit_seq&amp;gt;[0-9]+$|-1)&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>sync&lt;/code> verb returns a json array of the commit entries from the given commit id to the current commit id. Further, The &lt;code>sync&lt;/code> verb accepts -1 as argument which returns all the commit entries.&lt;/p>
&lt;pre>&lt;code>data:[{&amp;quot;atKey&amp;quot;:&amp;quot;@bob:phone@alice&amp;quot;,&amp;quot;operation&amp;quot;:&amp;quot;+&amp;quot;,&amp;quot;opTime&amp;quot;:&amp;quot;2020-10-26 11:57:43.732&amp;quot;,&amp;quot;commitId&amp;quot;:0,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;metadata&amp;quot;:{&amp;quot;ttr&amp;quot;:&amp;quot;36000000&amp;quot;,&amp;quot;ccd&amp;quot;:&amp;quot;false&amp;quot;}},
{&amp;quot;atKey&amp;quot;:&amp;quot;@bob:shared_key@alice&amp;quot;,&amp;quot;operation&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;opTime&amp;quot;:&amp;quot;2020-10-26 09:44:54.382219Z&amp;quot;,&amp;quot;commitId&amp;quot;:1}]
&lt;/code>&lt;/pre>&lt;p>The &lt;code>notify&lt;/code> verb&lt;/p>
&lt;p>The &lt;code>notify&lt;/code> verb enables us to notify the atsign user of some data event.&lt;/p>
&lt;p>The Following is the regex for the &lt;code>notify&lt;/code> verb&lt;/p>
&lt;p>&lt;code>notify:((?&amp;lt;operation&amp;gt;update|delete):)?(ttl:(?&amp;lt;ttl&amp;gt;\d+):)?(ttb:(?&amp;lt;ttb&amp;gt;\d+):)?(ttr:(?&amp;lt;ttr&amp;gt;(-)?\d+):)?(ccd:(?&amp;lt;ccd&amp;gt;true|false):)?(@(?&amp;lt;forAtSign&amp;gt;[^@:\s]-)):(?&amp;lt;atKey&amp;gt;[^:]((?!:{2})[^@])+)@(?&amp;lt;atSign&amp;gt;[^@:\s]+)(:(?&amp;lt;value&amp;gt;.+))?&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>When a key is notified successfully, returns&lt;/p>
&lt;p>&lt;code>data:success&lt;/code>&lt;/p>
&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>When an atsign user notifies the key to another atsign user, an entry has to be created in received notifications list on the user who has shared the key and an entry has to be created in sent notifications list on the user to whom the key is to be notified. When auto notify is set to true, when a key is created/updated and deleted notification is triggered to another atsign user.&lt;/p>
&lt;h3 id="notify-list">Notify List&lt;/h3>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>Notify list returns a list of notifications.&lt;/p>
&lt;p>Following is the regex&lt;/p>
&lt;p>&lt;code>notify:(list (?&amp;lt;regex&amp;gt;.-)|list$)&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>If the user is the owner, returns a list of received notifications. If a user is pol authenticated user, returns a list of sent notifications&lt;/p>
&lt;p>&lt;code>data:[{&amp;quot;id&amp;quot;:&amp;quot;0e5e9e89-c9cb-423b-8972-8c5487215990&amp;quot;,&amp;quot;from&amp;quot;:&amp;quot;@alice&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;@bob&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;@bob:phone@alice&amp;quot;,&amp;quot;value&amp;quot;:12345,&amp;quot;operation&amp;quot;:&amp;quot;update&amp;quot;,&amp;quot;epochMillis&amp;quot;:1603714122636}]&lt;/code>&lt;/p>
&lt;p>The &lt;code>monitor&lt;/code> Verb&lt;/p>
&lt;p>&lt;strong>Synopsis:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>monitor&lt;/code> verb streams received notifications.&lt;/p>
&lt;p>Following is the regex&lt;/p>
&lt;p>&lt;code>^monitor$|^monitor ?(?&amp;lt;regex&amp;gt;.-)?)$&lt;/code>&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;p>Returns a stream of notifications.&lt;/p>
&lt;pre>&lt;code>@alice@monitor
notification: {&amp;quot;id&amp;quot;:&amp;quot;773e226d-dac2-4269-b1ee-64d7ce93a42f&amp;quot;,&amp;quot;from&amp;quot;:&amp;quot;@bob&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;@alice&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;@alice:phone@bob&amp;quot;,&amp;quot;value&amp;quot;:null,&amp;quot;operation&amp;quot;:&amp;quot;update&amp;quot;,&amp;quot;epochMillis&amp;quot;:1603714720965}
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Description:&lt;/strong>&lt;/p>
&lt;p>The &lt;code>monitor&lt;/code> verb accepts an optional parameter to filter the notifications by passing filter criteria as regex to &lt;code>monitor&lt;/code> verb.&lt;/p>
&lt;h2 id="error-codes">Error Codes&lt;/h2>
&lt;table>
&lt;tr>
&lt;td>
&lt;strong>Error Code&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Error Message&lt;/strong>
&lt;/td>
&lt;td>&lt;strong>Description&lt;/strong>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0001
&lt;/td>
&lt;td>Server exception
&lt;/td>
&lt;td>Exception occurs when there is an issue while starting the server.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0002
&lt;/td>
&lt;td>DataStore exception
&lt;/td>
&lt;td>Exception occurs during keystore operations (GET/PUT/DELETE).
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0003
&lt;/td>
&lt;td>Invalid syntax
&lt;/td>
&lt;td>Exception occurs if we give any invalid command to the server.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0004
&lt;/td>
&lt;td>Socket error
&lt;/td>
&lt;td>Exception occurs when socket connection to secondary cannot be established.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0005
&lt;/td>
&lt;td>Buffer limit exceeded
&lt;/td>
&lt;td>This exception occurs when input/output message size reaches the maximum limit configured in the server.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0006
&lt;/td>
&lt;td>Outbound connection limit exceeded
&lt;/td>
&lt;td>Exception occurs when the number of open connections to other secondaries reaches the maximum limit configured.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0007
&lt;/td>
&lt;td>Secondary Server not found
&lt;/td>
&lt;td>Exception occurs when a secondary tries to connect to another secondary which is not available in the root directory or not yet instantiated.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0008
&lt;/td>
&lt;td>Handshake failure
&lt;/td>
&lt;td>This exception is for any exception during the handshake process of two secondaries.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0009
&lt;/td>
&lt;td>UnAuthorized client in the request
&lt;/td>
&lt;td>UnAuthorized Exception
&lt;p>will occur when an unsuccessful handshake happens between two secondaries.&lt;/p>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0010
&lt;/td>
&lt;td>Internal server error
&lt;/td>
&lt;td>This is for any server related errors.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0011
&lt;/td>
&lt;td>Internal server exception
&lt;/td>
&lt;td>This exception is used for any server related exceptions.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0012
&lt;/td>
&lt;td>Inbound connection limit exceeded
&lt;/td>
&lt;td>This exception will occur when the number of active clients reaches the maximum limit configured.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0401
&lt;/td>
&lt;td>Client authentication failed
&lt;/td>
&lt;td>This exception occurs when client authentication fails or client tries to execute any verb which needs authentication before successful authentication.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0013
&lt;/td>
&lt;td>Connection Exception
&lt;/td>
&lt;td>This will occur when a blocked user tries to connect to the secondary.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0014
&lt;/td>
&lt;td>Unknown AtClient exception
&lt;/td>
&lt;td>This exception will be thrown while performing any operations(Get/update/delete) using AtClient SDK.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0015
&lt;/td>
&lt;td>Key not found
&lt;/td>
&lt;td>This exception will be thrown when the key is not available for encryption/decryption.
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AT0021
&lt;/td>
&lt;td>Unable to connect to secondary
&lt;/td>
&lt;td>This exception will occur when we are unable to connect to secondary.
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;p>Glossary&lt;/p>
&lt;blockquote>
&lt;p>@protocol (Pronounced, at protocol)
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>@sign (Pronounced, at sign)
@sign is a unique name that a user gets when enrolled with @sign.com&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Root Server
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Secondary Server
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Verb
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Public Key
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Private Key
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Shared Secret
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Default Keys
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Key
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Value
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Metadata
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Commit Log
&lt;TO DO>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Access Log
&lt;TO DO>&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: New to Flutter?</title><link>https://devstaging.atsign.wtf/docs/overview/newtoflutter/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://devstaging.atsign.wtf/docs/overview/newtoflutter/</guid><description>
&lt;h2 id="0-what-is-flutter-and-why-did-we-choose-it-to-build-our-apps-on-the-platform">0. What is Flutter and why did we choose it to build our apps on the @platform?&lt;/h2>
&lt;p>&lt;a href="https://flutter.dev/">Flutter&lt;/a> is Googleâ€™s increasingly popular UI software framework. Flutter has taken the mobile app development ecosystem by storm over the last few years. The Flutter Developer Community is increasing multifold every day and we are proud to be a small part of it. As of Dec 2021, the Google Play Store has more than 375,000 apps built on Flutter.&lt;/p>
&lt;p>If you are new to Flutter, no problem! Many of our first developers knew nothing about these languages coming in. For guidance on Flutter installation and development, please visit &lt;a href="https://flutter.dev">flutter.dev&lt;/a>.&lt;/p>
&lt;h2 id="1-setting-up-flutter">1. Setting Up Flutter&lt;/h2>
&lt;p>First and foremost, in a Flutter environment you will need to install the Flutter SDK. The installation steps are dependent on your operating system. Follow along the &lt;a href="https://flutter.dev/docs/get-started/install">offical getting started guide&lt;/a> to complete your installation. When you install the Flutter SDK, it will also include the Dart SDK for you.&lt;/p>
&lt;h2 id="2-recommended-editors">2. Recommended Editors&lt;/h2>
&lt;p>We recommend using &lt;a href="https://www.jetbrains.com/idea/download/#section=windows">IntelliJ&lt;/a>, &lt;a href="https://developer.android.com/studio">Android Studio&lt;/a>, or &lt;a href="https://code.visualstudio.com/download">Visual Studio Code&lt;/a>. The offical Flutter guide also includes information to setup each of these options &lt;a href="https://flutter.dev/docs/get-started/editor">here&lt;/a>.&lt;/p>
&lt;h3 id="a-hrefhttpswwwjetbrainscomideaimg-srchttpsuploadwikimediaorgwikipediacommonsthumb99cintellij_idea_iconsvg64px-intellij_idea_iconsvgpng-altintellij-styleheight-15ema-intellij">&lt;a href="https://www.jetbrains.com/idea/">&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/IntelliJ_IDEA_Icon.svg/64px-IntelliJ_IDEA_Icon.svg.png" alt="IntelliJ" style="height: 1.5em;">&lt;/a> IntelliJ&lt;/h3>
&lt;p>IntelliJ is a commonly used IDE. If you have used it in the past, you can continue to use it for your Flutter projects.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Important Links for IntelliJ&lt;/p>
&lt;ul>
&lt;li>Download IntelliJ &lt;a href="https://www.jetbrains.com/idea/download/#section=windows">here&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h3 id="a-hrefhttpsdeveloperandroidcomstudioimg-srchttpsuploadwikimediaorgwikipediacommonsthumb992android_studio_trademarksvg256px-android_studio_trademarksvgpng-altandroid-studio-styleheight-15ema-android-studio">&lt;a href="https://developer.android.com/studio">&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Android_Studio_Trademark.svg/256px-Android_Studio_Trademark.svg.png" alt="Android Studio" style="height: 1.5em;">&lt;/a> Android Studio&lt;/h3>
&lt;p>Android Studio is an IDE built from IntelliJ specifically for Android development. If you are new to mobile development this a good IDE to start with, it is capable of installing all of your android tooling for you, and makes it easy to create emulators.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Important Links for Android Studio&lt;/p>
&lt;ul>
&lt;li>Download Android Studio &lt;a href="https://developer.android.com/studio">here&lt;/a>&lt;/li>
&lt;li>Read an article on how to set up an AVD &lt;a href="https://blog.atsign.dev/running-one-or-more-emulators-through-cli-using-android-studio-ckm2kuryy00v5mss16f1agh7m">here&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h3 id="a-hrefhttpscodevisualstudiocomimg-srchttpsuploadwikimediaorgwikipediacommonsthumb99avisual_studio_code_135_iconsvg150px-visual_studio_code_135_iconsvgpng-altvisual-studio-code-styleheight-15ema-visual-studio-code">&lt;a href="https://code.visualstudio.com/">&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Visual_Studio_Code_1.35_icon.svg/150px-Visual_Studio_Code_1.35_icon.svg.png" alt="Visual Studio Code" style="height: 1.5em;">&lt;/a> Visual Studio Code&lt;/h3>
&lt;p>Visual Studio Code, when compared to IntelliJ and Android Studio, is the most customizable with a seemingly endless number of programming languages to utilize. Developers commonly call this IDE â€˜VS Codeâ€™ (who has time to say entire words anyway?). If you have watched our tutorials on atsign.dev, youâ€™ll notice that VS Code is the other IDE of choice with our devs!&lt;/p>
&lt;p>Visual Studio Code, VSCode for short, is a customizable text editor. Due to its numerous plugins available, it can be used as an IDE for almost any language. It is the IDE of choice amongst most of our developers, and if you haven&amp;rsquo;t given it a try we recommend that you do!&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Important Links for Visual Studio Code&lt;/p>
&lt;ul>
&lt;li>Download Visual Studio Code &lt;a href="https://code.visualstudio.com/download">here&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="where-should-i-go-next">Where should I go next?&lt;/h2>
&lt;p>Follow &lt;a href="https://devstaging.atsign.wtf/docs/get-started/get-an-atsign/">this guide&lt;/a> to get an @sign.&lt;/p>
&lt;p>If you already have an @sign, follow &lt;a href="https://devstaging.atsign.wtf/docs/Get-Started/create-a-project">this guide&lt;/a> to create your first app.&lt;/p></description></item><item><title>Docs: The @platform FAQs</title><link>https://devstaging.atsign.wtf/docs/overview/faqs/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://devstaging.atsign.wtf/docs/overview/faqs/</guid><description>
&lt;h2 id="frequently-asked-questions">Frequently Asked Questions&lt;/h2>
&lt;!-- | General | Android | Flutter | Virtual Environment |
| ------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Get Started](/docs/get-started/) | [Set-Up](/docs/get-started/#android-studio) | [Set-Up](https://flutter.dev/docs/get-started/install) | [Set-Up](/docs/get-started/the-virtual-environment/) |
| [Contributing](/docs/resources/#contribution-guidelines) | [Emulator](https://blog.atsign.dev/running-one-or-more-emulators-through-cli-using-android-studio-ckm2kuryy00v5mss16f1agh7m) | [Flutter Doctor](https://flutter.dev/docs/get-started/install/windows#run-flutter-doctor) | [Tyler Time](https://www.youtube.com/watch?v=S_XaT3DmMiI) |
| [Developer Commissions](/dev_tools/commissions/) | [ Android SDK](https://developer.android.com/studio) | [Flutter SDK]() | [Errors/Bugs]() |
| [@Client SDK Cookbook](https://docs.google.com/document/d/19A0g0AIJU3x2MiwgRgcguGmimrNLr03CdmZg0RdnU_Y/edit?usp=sharing) | [Gradle](https://blog.atsign.dev/handling-gradle-exceptions-within-a-flutter-project-utilizing-the-platform-ckmqteej102lrm1s13piq393f) | [Errors/Bugs]() | | --></description></item><item><title>Docs: Contributing to an Open-Source GitHub Project</title><link>https://devstaging.atsign.wtf/docs/overview/contributing-open-source-proj/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devstaging.atsign.wtf/docs/overview/contributing-open-source-proj/</guid><description>
&lt;h2 id="what-is-an-open-source-project">What is an open source project?&lt;/h2>
&lt;p>For anyone who is new to not just software development but project management in general, an open source project is that of which any person has access to all of the details of the project and are free to utilize it, use it for research purposes, make modifications to it, and even distribute it elsewhere. GitHub of course, being one of the main wellsprings of open source projects!&lt;/p>
&lt;h2 id="how-can-you-contribute-to-an-open-source-project">How can you contribute to an open source project?&lt;/h2>
&lt;h3 id="forking-a-repository">Forking a Repository:&lt;/h3>
&lt;p>What is forking? In simplest terms, forking a project is simply making a copy of it to your own GitHub profile. GitHub allows anyone to fork a repository and this will allow you to do whatever you please with the entire repository without making any actual changes to the real project! Imagine it as taking a picture of a tree. You can make edits to your photo to make the tree look purple or to give it a face, but you wonâ€™t make any changes to the actual tree!&lt;/p>
&lt;h3 id="how-to-fork-a-repository">How to Fork a Repository:&lt;/h3>
&lt;p>First, navigate to the home page of the repository you wish to fork. Refer to the screenshot below:&lt;/p>
&lt;p>Here, you can see that we are currently within the atsign-foundationâ€™s â€˜&lt;a href="https://github.com/atsign-foundation/at_demos">at_demos&lt;/a>â€™ repository.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/contributing-project/fork-button.png" alt="fork-button" title="Fork button">&lt;/p>
&lt;p>If you look at the top right corner of the repositoryâ€™s page, youâ€™ll notice the â€˜Forkâ€™ button and a number next to it. That number represents the number of times this specific repository has been forked. Once you select the Fork button, GitHub will prompt you which repository you wish to fork to. My go-to option is typically my own profile, where it will create an entire repository under your profile name so that you may make whatever modifications you wish. After you choose what location you wish to fork to, GitHub will do all of the hard work for you. After a few seconds or so (depending on your Internet connection speed), youâ€™ll find that the entire repository that you forked, is now copied to wherever you told GitHub to fork it! Congratulations! Youâ€™ve forked a repository!&lt;/p>
&lt;h3 id="make-modifications-to-the-repository">Make Modifications to the Repository:&lt;/h3>
&lt;p>Now, you can do whatever your heart so desires with the project! Depending on what the project is, you may wish to clone the repository to your local machine using https/, or simply commit changes directly on your forked repository (totally your choice/preference!).&lt;/p>
&lt;h3 id="creating-a-public-key-with-github">Creating a Public Key with GitHub&lt;/h3>
&lt;p>We recommend git cloning the repository using the SSH key option. You can set up your own public keys on GitHub quite easily. If you see below, you will see the Clone options, &amp;lsquo;HTTPS, SSH, and GitHub CLI&amp;rsquo;. Select the &amp;lsquo;SSH&amp;rsquo; option and this will provide you a password-protected SSH key to git clone the repository.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/GitHub-Code-Options.png" alt="GitHub-Code-Options" title="download theme options">&lt;/p>
&lt;p>In order to create a public key on your machine, follow these simple steps:&lt;/p>
&lt;p>Step 1: &lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generate Keys&lt;/a>&lt;/p>
&lt;p>Step 2: &lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">Add Keys to your Github&lt;/a>&lt;/p>
&lt;h3 id="create-a-pull-request">Create a Pull Request:&lt;/h3>
&lt;p>After you are satisfied with the changes you have made to the project and are confident that this change will be beneficial to include, all you now have to do is create a pull request within the projectâ€™s real repository. GitHub has made it very simple to create a pull request for comparing forks. Refer to the screenshot below:&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/contributing-project/pull-request.png" alt="pull-request" title="Pull request option">&lt;/p>
&lt;p>You may notice, in the top left corner of the repository, you will see the â€˜Pull requestsâ€™ option. After selecting this, you will be taken to the Pull Requests page. This page will show you every pull request that has been created for the specific repository. If you see below, there has been one pull request for this repository thus far.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/contributing-project/page-pull-request.png" alt="pull-request-page" title="Pull request page">&lt;/p>
&lt;p>If you are sure you are ready to create a new pull request, simply click the â€˜New pull requestâ€™ button. This will then navigate you to the compare page. If you followed the above steps, you would want to â€˜compare forksâ€™, which will be a small hyperlink as circled below:&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/contributing-project/compare-changes.png" alt="compare-changes" title="Compare changes">&lt;/p>
&lt;p>This will now change the base and head repositories that will be compared. Be sure to select the correct branch of the real project that you wish to make a pull request for. Select the same repository you forked and the correct branch as the â€˜baseâ€™ repository and â€˜baseâ€™ branch. You may need to contact the project leader or one of the main developers if you need assistance for which branch you need to make a pull request for. After selecting these, be very careful in selecting the repository that you forked. This will be where you had made the modifications. Select this repository as the â€˜headâ€™ repository and â€˜compareâ€™ branch.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo//contributing-project/review-mods.png" alt="review-mods" title="Review modifications">&lt;/p>
&lt;p>From here, you will see all of the modifications that will occur if your pull request is accepted. Once you double check all of these modifications and are confident in it, you may now select â€˜Create pull requestâ€™. You may notice that mine says â€˜View pull requestâ€™ but that is because I have already gone through this process and have successfully created one.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;b> Note: &lt;/b> Be sure that your contribution will be &lt;u>&lt;b>useful&lt;/b>&lt;/u> for those who utilize the project! If you do end up creating a pull request with your modifications, make sure that those modifications are properly documented in both the code and/or the comment section of the pull request itself.&lt;/p>
&lt;/div></description></item><item><title>Docs: Working With Hugo (Static Webpage Generator)</title><link>https://devstaging.atsign.wtf/docs/overview/getting-started-with-hugo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devstaging.atsign.wtf/docs/overview/getting-started-with-hugo/</guid><description>
&lt;h3 id="what-is-hugo">What is Hugo?&lt;/h3>
&lt;p>Hugo is a static site generator that you can read more about &lt;a href="https://gohugo.io/documentation/">here&lt;/a>.&lt;/p>
&lt;h3 id="have-hugo-set-up-already">Have Hugo set up already?&lt;/h3>
&lt;p>Click &lt;a href="https://devstaging.atsign.wtf/docs/overview/getting-started-with-hugo/#set-up-atsigndev-on-your-machine">here&lt;/a> to get atsign.dev running on your machine.&lt;/p>
&lt;h2 id="windows">Windows:&lt;/h2>
&lt;h3 id="installing-hugo-on-windows">Installing Hugo on Windows:&lt;/h3>
&lt;p>There are a few ways in which you can get started with Hugo, however the easiest way I have found to getting started and jumping straight into things is by the following steps:&lt;/p>
&lt;p>Create a directory in a location on your drive. Next, rename this folder to â€˜Hugoâ€™. After this, navigate inside of your Hugo folder and create another folder within it, this time calling it â€˜binâ€™.&lt;/p>
&lt;p>Youâ€™re now ready to download Hugo on to your machine. As most projects which are open-source can be found on GitHub, so can Hugoâ€™s releases. In any web browser, navigate to the &lt;a href="https://github.com/gohugoio//Hugo/releases" title="GoHugo Resources">GoHugoIo&lt;/a> repository. Here, you will find a great list of all of the releases catered for Windows, Linux, and MacOS. Be sure to select a release that has your operating system in the title. For example, I am using a Windows 10 machine that runs a 64 bit processor. So I navigated to the zip file titled hugo_extended_0.83.1_Windows-64bit.zip.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;b> Note: &lt;/b> The release number may be different from the one listed above due to the time at which this documentation was written.&lt;/p>
&lt;/div>
&lt;p>You may also have noticed that I have chosen the extended Hugo version. Hugo extended has more capabilities, especially for thematic purposes. Hugo&amp;rsquo;s extension comes with a few advantages such as; SASS/SCSS support, Minify javascript and css, resource catenation, source mapping, image processing and so much more. A more in depth view of it can be found &lt;a href="https://www.npmjs.com/package/hugo-extended">here&lt;/a>.&lt;/p>
&lt;p>Once you have found the matching release title for your machine, feel free to simply download the zip file. Where you download the zip file does not matter, however, where you extract it does. When your download is complete, select â€˜Extract allâ€™ and be sure that you extract the contents of what you downloaded into the â€˜binâ€™ folder that exists within your Hugo folder. Once the extraction is complete, it should look something like this:&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo_ext_file_location.PNG" alt="bin-folder" title="bin folder">&lt;/p>
&lt;p>For the release that I have downloaded and extracted, there are three files. Perhaps in a later release of Hugo, there may be more files included, but for now, as long as you have the application file titled â€˜hugoâ€™, you will be fine. If, for whatever odd reason, the â€˜hugoâ€™ file is titled something else, be sure to rename it to â€˜hugoâ€™ (note the lowercase â€˜hâ€™). There is also a license file and a readme. It is completely up to you if you read the readme and license files.&lt;/p>
&lt;h3 id="determining-if-your-installation-on-windows-was-successful">Determining if your Installation on Windows was successful:&lt;/h3>
&lt;p>To make sure that your Hugo was successfully installed and extracted, open your command prompt [Some ways in which this can be done =&amp;gt; (Win key + r, type â€˜cmdâ€™, hit â€˜enterâ€™), (Go to your Search bar and the bottom of your taskbar and type in â€˜cmdâ€™ or â€˜command promptâ€™ and hit â€˜enterâ€™)] and navigate to the directory where you extracted Hugo. For the above picture, my hugo.exe fileâ€™s location was D:\Hugo\bin\hugo.exe, so all I have to type is â€˜cd D:\Hugo\binâ€™ and I will be taken to where the hugo.exe exists. If youâ€™re not sure where you had saved your Hugo folder, you can either use the File Explorer you have presently open and simply highlight the path that is in the bar above your currently open Hugo folder. I have circled it below for your convenience.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo_ext_file_location_circled.PNG" alt="file-location" title="file location">&lt;/p>
&lt;p>To show what your command prompt should look like:
&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo_ext_location.PNG" alt="hugo-location" title="cmd location">&lt;/p>
&lt;p>Once you are here, feel free to try the command â€˜hugo versionâ€™:
&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo_ext_bin_version.PNG" alt="hugo-version" title="hugo version">&lt;/p>
&lt;p>If your command prompt happily prints out the current version of Hugo you have on your machine, this means you have successfully installed and extracted Hugo onto your machine. However, you may notice that if you use the command â€˜cd ..â€™ to move directories to the â€˜Hugoâ€™ folder rather than â€˜binâ€™ and try the command â€˜hugo versionâ€™ you will be hit with an error or Windows will tell you that hugo isnâ€™t a recognized command.
&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo-not-recognized.png" alt="hugo-error" title="hugo error">&lt;/p>
&lt;p>If you are like me, and wish to be capable of using the hugo command anywhere on your machine, maybe because you would like to create a web page with its own folder and its own content, there is an easy way to fix this.&lt;/p>
&lt;p>What you will have to do is navigate to your â€˜Searchâ€™ bar and type in â€˜envâ€™ or â€˜environmentâ€™. Windows will suggest the â€˜Edit the System Environment Variablesâ€™. Open it and a System Properties dialog box should appear and look something like this:
&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/env-variables.png" alt="env-variables" title="system properties">&lt;/p>
&lt;p>Double-click on the button labeled â€˜Environment Variablesâ€™ and this will open the dialog box where you can edit the environment variables of your machine. You may be wondering what environment variables are and what theyâ€™re for. In simplest terms, just like how you noticed that your hugo command did not work outside of the bin folder, there are other applications that work the same way and will only work in the folder they exist in. Windows has the capability of allowing you to run the application from anywhere, which is exactly what we would like to do. You should see something in your â€˜user variablesâ€™ called Path. Each Path that is listed, is more than likely an application, similar to your Hugo, that exists only in a folder but is used globally on your machine. Highlight â€˜Pathâ€™ and click â€˜Edit&amp;hellip;â€™. This will open a new dialog box that will list the individual paths that already exist. Click â€˜Newâ€™ and simply type (or paste) the location of your hugo.exe. If you may recall from my example, my hugo.exe was in the following location; D:\hugo_ext\bin.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/Hugo-Path-Edit.png" alt="hugo-path-edit" title="environment variables">&lt;/p>
&lt;p>Hereâ€™s what mine looks like after I have finished typing in where it exists (it is the one highlighted in blue). After you have done the same, you can now click â€˜OKâ€™ until all of the dialog boxes are closed. Now this is where the magic happens! After restarting your computer, try using the â€˜hugo versionâ€™ command again outside of the â€˜Hugo\binâ€™ folder and see if Windows recognizes it as a command! I simply started up my command prompt and immediately typed in â€˜hugo versionâ€™ and it worked. If the command works, you are now ready to get started on a Hugo project.&lt;/p>
&lt;p>&lt;img src="https://devstaging.atsign.wtf/Hugo/getting-started/hugo-version-extended.PNG" alt="Hugo-Version-Outside-Bin" title="hugo version outside bin">&lt;/p>
&lt;h2 id="mac">Mac:&lt;/h2>
&lt;h3 id="installing-hugo-on-mac">Installing Hugo on Mac:&lt;/h3>
&lt;p>The first step you will want to take is navigating to the website &lt;a href="https://brew.sh" title="Homebrew Installation">Homebrew&lt;/a>. This website is a package manager and allows you to install, download and manage packages. You can use &lt;a href="https://brew.sh" title="Homebrew Installation">Homebrew&lt;/a> to install Hugo easily on your computer. Once you are taken to the landing page, you should come across a terminal command that looks like:&lt;/p>
&lt;pre>&lt;code>/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;
&lt;/code>&lt;/pre>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;b> Note: &lt;/b> This command may be updated depending on any new releases,
so be sure to check the website before copying the line of code above!&lt;/p>
&lt;/div>
&lt;p>Simply paste the line of code into your terminal. Once you click enter and input your password for administrative access, Homebrew will begin installing itself onto your machine. This can take a few minutes. Once Homebrew is finished, you can then type the command:&lt;/p>
&lt;pre>&lt;code>brew install hugo
&lt;/code>&lt;/pre>&lt;p>Homebrew may update itself automatically before installing hugo.&lt;/p>
&lt;h3 id="determining-if-your-installation-on-mac-was-successful">Determining if your Installation on Mac was successful:&lt;/h3>
&lt;p>You can validate your install by the command:&lt;/p>
&lt;pre>&lt;code>which hugo
&lt;/code>&lt;/pre>&lt;p>You can also use the command:&lt;/p>
&lt;pre>&lt;code>hugo version
&lt;/code>&lt;/pre>&lt;p>If you run into an error, be sure to reread the steps carefully as you may have missed something or read through the Hugo set up steps in their own documentation in case this is out dated.&lt;/p>
&lt;h3 id="set-up-atsigndev-on-your-machine">Set up atsign.dev on your machine&lt;/h3>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;b> Note: &lt;/b> Be sure to FORK (not sure how? Follow these &lt;a href="https://devstaging.atsign.wtf/docs/overview/contributing-open-source-proj/#forking-a-repository">steps&lt;/a>) our atsign.dev repo before following these next steps.&lt;/p>
&lt;/div>
&lt;p>Within your command prompt/terminal, navigate to the cloned repo directory and run the following commands to start up your Hugo local server:&lt;/p>
&lt;pre>&lt;code>git submodule update --init --recursive
hugo server
&lt;/code>&lt;/pre>&lt;p>Git submodule update will pull the at_docsy repo&amp;rsquo;s contents and add them to a created folder titled at_docsy under your themes folder. This pulls the layout and theme structure of our developer site. Hugo server will launch a local version of atsign.dev for you.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;b> Note: &lt;/b> The hugo server command may fail and there are numerous reasons for this! We have a document that details known issues &lt;a href="https://docs.google.com/document/d/1CZaAHi5IBbKMdg61YRtP5q8iFN0meP8h3mG-fu24xrQ/edit?usp=sharing">here&lt;/a> along with their solutions.&lt;/p>
&lt;/div>
&lt;p>After this, you can now open any web browser and type in the URL:&lt;/p>
&lt;p>&lt;a href="http://localhost:1313">localhost:1313&lt;/a>&lt;/p>
&lt;p>You should now see atsign.dev running on your web browser! From here, if you wish to contrbute, I recommend reading through our &lt;a href="https://devstaging.atsign.wtf/docs/overview/contributing-open-source-proj/">&amp;lsquo;Contributing to an Open-Source Project&amp;rsquo;&lt;/a> document!&lt;/p></description></item></channel></rss>